{"version":3,"sources":["webpack:///./src/components/gameContainer.js?83ad","webpack:///./src/components/chat/chat.js?ba70","webpack:///./src/components/chat/messages.js?d45c"],"names":["GameContainer","clearGame","props","socketOpened","ws","send","type","data","params","id","e","onopen","user","Chat","messages","chatScreen","Messages","toggleChat","nextProps","nextState","length","map","msg","i","author","body","mapMessages"],"mappings":"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","file":"0.9684ff9aa6739f01283e.hot-update.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chat from \"./chat/chat\";\nimport Game from \"./game/game\";\nimport { clearGame } from \"../actions/gameActions\";\n\n@connect(\n  () => ({}),\n  { clearGame }\n  )\nexport default class GameContainer extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    try {\n      this.props.ws.send(JSON.stringify({\n        type: \"GAME_CONNECTED\",\n        data: +this.props.params.id\n      }))\n    } catch(e) {\n      this.props.ws.onopen = this.socketOpened;\n    }\n  }\n\n  socketOpened = () => {\n    this.props.ws.send(JSON.stringify({\n      type: \"GAME_CONNECTED\",\n      data: +this.props.params.id\n    }))\n  }\n  componentWillUnmount() {\n    this.props.clearGame();\n  }\n  render() {\n    return (\n      <div className=\"game-container\">\n        <Game ws={this.props.ws} user={this.props.user} />\n        <Chat ws={this.props.ws} />\n      </div>\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/gameContainer.js\n **/","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Messages from \"./messages\";\nimport Input from \"./input\";\n\n@connect({ messages, chatScreen })\n\nexport class Chat extends Component {\n  render() {\n    return (<div className={\"chat-screen\" + (this.props.chatScreen ? \" chat-open\" : \"\")}>\n      <Messages messages={this.props.messages} />\n      <Input\n        ws={this.props.ws}\n        messages={this.props.messages}\n        chatOpen={this.props.chatScreen}\n      />\n    </div>);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/chat/chat.js\n **/","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleChat } from \"../../actions/chatActions\";\n\n@connect(\n  () => ({}),\n  { toggleChat }\n)\n\n\nexport default class Messages extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.messages.length !== nextProps.messages.length) {\n      return true;\n    }\n\n    return false;\n  }\n  mapMessages() {\n    return this.props.messages.map((msg, i) => (\n      <li key={msg.author + msg.body + i}><span>{msg.author}:&nbsp;</span>{msg.body}</li>\n    ));\n  }\n  render() {\n    return (\n      <div className=\"message-list\">\n        <div onClick={this.props.toggleChat}>&times;</div>\n        <ul>\n          { this.mapMessages() }\n        </ul>\n      </div>\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/chat/messages.js\n **/"],"sourceRoot":""}