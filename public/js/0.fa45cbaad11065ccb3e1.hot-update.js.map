{"version":3,"sources":["webpack:///./src/reducers/user_reducer.js?1aca","webpack:///./src/components/game/game.js?87d5","webpack:///./src/components/main.js?cabb","webpack:///./src/components/chat/messages.js?d45c"],"names":["state","action","type","user","payload","data","logOut","req","axios","delete","Game","props","handleClick","game","turn","id","solving","ws","send","gameInfo","userId","wrongGuesses1","wrongGuesses2","correctGuesses","toggleChat","usedLetters","mapStateToProps","url","WebSocket","Main","error","loading","getCurrentUser","fetchedGameData","updatedGame","addNewMessage","fetchedMessages","createdGame","clearError","setError","stopLoading","context","catchError","window","location","replace","handleNewMessage","res","message","JSON","parse","setState","then","catch","onmessage","onclose","nextProps","username","nickname","Children","map","children","child","cloneElement","flashError","loadingScreen","contextTypes","router","PropTypes","object","isRequired","Messages","nextState","messages","length","msg","i","author","body","mapMessages"],"mappings":"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","file":"0.fa45cbaad11065ccb3e1.hot-update.js","sourcesContent":["import { LOGGED_IN, LOGGED_OUT } from \"../constants/constants\";\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case LOGGED_IN:\n      let user = action.payload.data;\n      return user;\n    case LOGGED_OUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const logOut = () => {\n  const req = axios.delete(\"/api/session\");\n\n  return {\n    type: LOGGED_OUT,\n    payload: req\n  };\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/reducers/user_reducer.js\n **/","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport Diagram from \"./diagram\"\nimport GameInput from \"./gameInput\"\nimport Letters from \"./letters\"\nimport { toggleChat } from \"../../actions/chatActions\"\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n  }\n  handleClick = () => {\n    if (this.props.game.turn === this.props.user.id && !this.props.game.solving){\n      this.props.ws.send(JSON.stringify({\n        type: \"SOLVE_GAME\",\n        data: {\n          id: this.props.gameInfo.id, \n          userId: this.props.user.id\n        }\n      }));\n    }\n  }\n\n  render() {\n    var game = this.props.game;\n    return (\n      <div className=\"game-screen\">\n        <Diagram guessCount1={game.wrongGuesses1}\n                 guessCount2={game.wrongGuesses2}/>\n        <GameInput guesses={game.correctGuesses || []}/>\n        <div className=\"button-div\">\n          <button className=\"solve-it\" \n                  onClick={this.handleClick} \n                  disabled={game.solving}\n                >Solve it</button>\n          <button className=\"open-chat\" \n                  onClick={() => this.props.toggleChat()}\n                >Chat</button>\n        </div>\n        <Letters usedLetters={game.usedLetters || []} \n                 guesses={game.correctGuesses || []}\n                 turn={game.turn === this.props.user.id}\n                 user={this.props.user}\n                 ws={this.props.ws}\n                />\n      </div>\n      )\n  }\n}\n\nconst mapStateToProps = ({ game, gameInfo }) => {\n  return { game, gameInfo };\n}\n\nexport default connect(mapStateToProps, { toggleChat })(Game);\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/game/game.js\n **/","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport NavBar from \"./navBar\";\nimport { getCurrentUser, logOut, clearError, setError, stopLoading } from \"../actions/userActions\";\nimport { fetchedGameData, updatedGame, createdGame } from \"../actions/gameActions\";\nimport { addNewMessage, fetchedMessages } from \"../actions/chatActions\";\n\nconst url = process.env.WS_URL + \"/ws\";\nconst ws = new WebSocket(url);\n\n@connect(\n  ({ user, error, loading }) => ({ user, error, loading }),\n  ({\n    getCurrentUser,\n    logOut,\n    fetchedGameData,\n    updatedGame,\n    addNewMessage,\n    fetchedMessages,\n    createdGame,\n    clearError,\n    setError,\n    stopLoading\n  })\n)\nexport default class Main extends Component {\n  constructor(props, context){\n    super(props);\n  }\n\n  static contextTypes = {\n    router: React.PropTypes.object.isRequired\n  }\n\n  componentWillMount() {\n    if (!this.props.user.id){\n      this.props.getCurrentUser();\n    }\n\n    ws.onmessage = this.handleNewMessage;\n    ws.onclose = () => this.props.setError(\"Connection lost, please try again later...\")\n  }\n\n  catchError = () => {\n    if (!this.props.user) {\n      window.location.replace(\"/login\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.props.user.id && nextProps.user.id) {\n      this.props.stopLoading();\n      ws.send(JSON.stringify({\n        type: \"USER_CONNECTED\",\n        data: {\n          username: nextProps.user.username,\n          nickname: nextProps.user.nickname\n        }\n      }));\n    }\n  }\n  handleNewMessage = (res) => {\n    let message = JSON.parse(res.data);\n    switch (message.type) {\n      case \"GAME_CONNECTED\":\n        this.props.fetchedGameData(message.data)\n        break;\n      case \"MOVE_MADE\":\n      case \"GAME_FINISHED\":\n        this.props.updatedGame(message.data);\n        break;\n      case \"NEW_MESSAGE\":\n        this.props.addNewMessage(message.data);\n        break;\n      case \"FETCHED_MESSAGES\":\n        this.props.fetchedMessages(message.data);\n        break;\n      case \"CREATED_GAME\":\n        this.props.createdGame(message.data)\n        break;\n      default:\n        break;\n    }\n  }\n\n  logOut = () => {\n    this.setState({ loading: true });\n    this.props.logOut().then(() => {\n      window.location.replace(\"/\");\n    }).catch(() => {\n      window.location.replace(\"/\");\n    });\n  }\n  loadingScreen() {\n    if (this.props.loading) {\n      return (<div className=\"overlay\">\n        <div className=\"loader\"></div>\n      </div>);\n    }\n  }\n  flashError() {\n    if (this.props.error.message) {\n      return (<div className=\"flash-error\">\n        { this.props.error.message }\n      </div>);\n    }\n  }\n  children() {\n    if (this.props.user) {\n      return React.Children.map(this.props.children, (child) => {\n        return React.cloneElement(child, {\n          user: this.props.user,\n          ws: ws\n        });\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <NavBar user={this.props.user} logOut={this.logOut}/>\n        { this.flashError() }\n        { this.children() }\n        { this.loadingScreen() }\n      </div>\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/main.js\n **/","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleChat } from \"../../actions/chatActions\";\n\n@connect(\n  () => ({}),\n  { toggleChat }\n)\n\n\nexport default class Messages extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.messages.length !== nextProps.messages.length) {\n      return true;\n    }\n\n    return false;\n  }\n  mapMessages() {\n    return this.props.messages.map((msg, i) => (\n      <li key={msg.author + msg.body + i}><span>{msg.author}:&nbsp;</span>{msg.body}</li>\n    ));\n  }\n  render() {\n    return (\n      <div className=\"message-list\">\n        <div onClick={this.props.toggleChat}>&times;</div>\n        <ul>\n          { this.mapMessages() }\n        </ul>\n      </div>\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/chat/messages.js\n **/"],"sourceRoot":""}